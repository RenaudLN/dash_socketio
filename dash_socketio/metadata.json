{"src/ts/components/DashSocketIO.tsx":{"displayName":"DashSocketIO","description":"","props":{"url":{"description":"The socket.io server URL, defaults to window.location.origin","required":false,"type":{"name":"string","raw":"string"}},"path":{"description":"The path for the Socket.IO endpoint, defaults to '/socket.io'","required":false,"defaultValue":{"value":"'/socket.io'","computed":false},"type":{"name":"string","raw":"string"}},"eventNames":{"description":"Name of Socket.IO events to listen to","required":false,"type":{"name":"arrayOf","value":{"name":"string","raw":"string"},"raw":"string[]"}},"connected":{"description":"Whether the client is connected to the websocket - READONLY","required":false,"defaultValue":{"value":"false","computed":false},"type":{"name":"bool","raw":"boolean"}},"socketId":{"description":"The socket ID - READONLY","required":false,"type":{"name":"string","raw":"string"}},"autoConnect":{"description":"Whether to automatically connect on component mount","required":false,"defaultValue":{"value":"true","computed":false},"type":{"name":"bool","raw":"boolean"}},"timeout":{"description":"Timeout in milliseconds for emitted events (0 means no timeout)","required":false,"defaultValue":{"value":"5000","computed":false},"type":{"name":"number","raw":"number"}},"reconnectionAttempts":{"description":"Number of reconnection attempts before giving up","required":false,"defaultValue":{"value":"Infinity","computed":false},"type":{"name":"number","raw":"number"}},"reconnectionDelay":{"description":"Initial delay in milliseconds before reconnection attempt","required":false,"defaultValue":{"value":"1000","computed":false},"type":{"name":"number","raw":"number"}},"reconnectionDelayMax":{"description":"Maximum delay in milliseconds between reconnection attempts","required":false,"defaultValue":{"value":"5000","computed":false},"type":{"name":"number","raw":"number"}},"reconnection":{"description":"Whether to enable reconnection","required":false,"defaultValue":{"value":"true","computed":false},"type":{"name":"bool","raw":"boolean"}},"socketOptions":{"description":"Additional Socket.IO options","required":false,"defaultValue":{"value":"{}","computed":false},"type":{"name":"shape","value":{"forceNew":{"description":"Should we force a new Manager for this connection?\n@,default,false","required":false,"name":"bool","raw":"boolean"},"multiplex":{"description":"Should we multiplex our connection (reuse existing Manager) ?\n@,default,true","required":false,"name":"bool","raw":"boolean"},"path":{"description":"The path to get our client file from, in the case of the server\nserving it\n@,default,'/socket.io'","required":false,"name":"string","raw":"string"},"reconnection":{"description":"Should we allow reconnections?\n@,default,true","required":false,"name":"bool","raw":"boolean"},"reconnectionAttempts":{"description":"How many reconnection attempts should we try?\n@,default,Infinity","required":false,"name":"number","raw":"number"},"reconnectionDelay":{"description":"The time delay in milliseconds between reconnection attempts\n@,default,1000","required":false,"name":"number","raw":"number"},"reconnectionDelayMax":{"description":"The max time delay in milliseconds between reconnection attempts\n@,default,5000","required":false,"name":"number","raw":"number"},"randomizationFactor":{"description":"Used in the exponential backoff jitter when reconnecting\n@,default,0.5","required":false,"name":"number","raw":"number"},"timeout":{"description":"The timeout in milliseconds for our connection attempt\n@,default,20000","required":false,"name":"number","raw":"number"},"autoConnect":{"description":"Should we automatically connect?\n@,default,true","required":false,"name":"bool","raw":"boolean"},"parser":{"description":"the parser to use. Defaults to an instance of the Parser that ships with socket.io.","required":false,"name":"any","raw":"any"},"host":{"description":"The host that we're connecting to. Set from the URI passed when connecting","required":false,"name":"string","raw":"string"},"hostname":{"description":"The hostname for our connection. Set from the URI passed when connecting","required":false,"name":"string","raw":"string"},"secure":{"description":"If this is a secure connection. Set from the URI passed when connecting","required":false,"name":"bool","raw":"boolean"},"port":{"description":"The port for our connection. Set from the URI passed when connecting","required":false,"name":"union","value":[{"name":"string","raw":"string"},{"name":"number","raw":"number"}],"raw":"string | number"},"query":{"description":"Any query parameters in our uri. Set from the URI passed when connecting","required":false,"name":"objectOf","value":{"name":"any","raw":"any"},"raw":"{ [key: string]: any; }"},"agent":{"description":"`http.Agent` to use, defaults to `false` (NodeJS only)\n\nNote: the type should be \"undefined | http.Agent | https.Agent | false\", but this would break browser-only clients.\n@,see,https,://nodejs.org/api/http.html#httprequestoptions-callback","required":false,"name":"union","value":[{"name":"string","raw":"string"}],"raw":"string | boolean"},"upgrade":{"description":"Whether the client should try to upgrade the transport from\nlong-polling to something better.\n@,default,true","required":false,"name":"bool","raw":"boolean"},"forceBase64":{"description":"Forces base 64 encoding for polling transport even when XHR2\nresponseType is available and WebSocket even if the used standard\nsupports binary.","required":false,"name":"bool","raw":"boolean"},"timestampParam":{"description":"The param name to use as our timestamp key\n@,default,'t'","required":false,"name":"string","raw":"string"},"timestampRequests":{"description":"Whether to add the timestamp with each transport request. Note: this\nis ignored if the browser is IE or Android, in which case requests\nare always stamped\n@,default,false","required":false,"name":"bool","raw":"boolean"},"transports":{"description":"A list of transports to try (in order). Engine.io always attempts to\nconnect directly with the first one, provided the feature detection test\nfor it passes.\n@,default,['polling','websocket', 'webtransport']","required":false,"name":"arrayOf","value":{"name":"string","raw":"string"},"raw":"string[]"},"rememberUpgrade":{"description":"If true and if the previous websocket connection to the server succeeded,\nthe connection attempt will bypass the normal upgrade process and will\ninitially try websocket. A connection attempt following a transport error\nwill use the normal upgrade process. It is recommended you turn this on\nonly when using SSL/TLS connections, or if you know that your network does\nnot block websockets.\n@,default,false","required":false,"name":"bool","raw":"boolean"},"onlyBinaryUpgrades":{"description":"Are we only interested in transports that support binary?","required":false,"name":"bool","raw":"boolean"},"requestTimeout":{"description":"Timeout for xhr-polling requests in milliseconds (0) (only for polling transport)","required":false,"name":"number","raw":"number"},"transportOptions":{"description":"Transport options for Node.js client (headers etc)","required":false,"name":"shape","value":{"constructor":{"description":"The initial value of Object.prototype.constructor is the standard built-in Object constructor.","required":false,"name":"func","raw":"Function"},"toString":{"description":"Returns a string representation of an object.","required":false,"name":"func","raw":"() => string"},"toLocaleString":{"description":"Returns a date converted to a string using the current locale.","required":false,"name":"func","raw":"() => string"},"valueOf":{"description":"Returns the primitive value of the specified object.","required":false,"name":"func","raw":"() => Object"},"hasOwnProperty":{"description":"Determines whether an object has a property with the specified name.\n@,param,v, ,A property name.","required":false,"name":"func","raw":"(v: PropertyKey) => boolean"},"isPrototypeOf":{"description":"Determines whether an object exists in another object's prototype chain.\n@,param,v, ,Another object whose prototype chain is to be checked.","required":false,"name":"func","raw":"(v: Object) => boolean"},"propertyIsEnumerable":{"description":"Determines whether a specified property is enumerable.\n@,param,v, ,A property name.","required":false,"name":"func","raw":"(v: PropertyKey) => boolean"}},"raw":"Object"},"pfx":{"description":"(SSL) Certificate, Private key and CA certificates to use for SSL.\nCan be used in Node.js client environment to manually specify\ncertificate information.","required":false,"name":"string","raw":"string"},"key":{"description":"(SSL) Private key to use for SSL. Can be used in Node.js client\nenvironment to manually specify certificate information.","required":false,"name":"string","raw":"string"},"passphrase":{"description":"(SSL) A string or passphrase for the private key or pfx. Can be\nused in Node.js client environment to manually specify certificate\ninformation.","required":false,"name":"string","raw":"string"},"cert":{"description":"(SSL) Public x509 certificate to use. Can be used in Node.js client\nenvironment to manually specify certificate information.","required":false,"name":"string","raw":"string"},"ca":{"description":"(SSL) An authority certificate or array of authority certificates to\ncheck the remote host against.. Can be used in Node.js client\nenvironment to manually specify certificate information.","required":false,"name":"union","value":[{"name":"string","raw":"string"},{"name":"arrayOf","value":{"name":"string","raw":"string"},"raw":"string[]"}],"raw":"string | string[]"},"ciphers":{"description":"(SSL) A string describing the ciphers to use or exclude. Consult the\n[cipher format list]\n(http://www.openssl.org/docs/apps/ciphers.html#CIPHER_LIST_FORMAT) for\ndetails on the format.. Can be used in Node.js client environment to\nmanually specify certificate information.","required":false,"name":"string","raw":"string"},"rejectUnauthorized":{"description":"(SSL) If true, the server certificate is verified against the list of\nsupplied CAs. An 'error' event is emitted if verification fails.\nVerification happens at the connection level, before the HTTP request\nis sent. Can be used in Node.js client environment to manually specify\ncertificate information.","required":false,"name":"bool","raw":"boolean"},"extraHeaders":{"description":"Headers that will be passed for each request to the server (via xhr-polling and via websockets).\nThese values then can be used during handshake or for special proxies.","required":false,"name":"objectOf","value":{"name":"string","raw":"string"},"raw":"{ [header: string]: string; }"},"withCredentials":{"description":"Whether to include credentials (cookies, authorization headers, TLS\nclient certificates, etc.) with cross-origin XHR polling requests\n@,default,false","required":false,"name":"bool","raw":"boolean"},"closeOnBeforeunload":{"description":"Whether to automatically close the connection whenever the beforeunload event is received.\n@,default,false","required":false,"name":"bool","raw":"boolean"},"useNativeTimers":{"description":"Whether to always use the native timeouts. This allows the client to\nreconnect when the native timeout functions are overridden, such as when\nmock clocks are installed.\n@,default,false","required":false,"name":"bool","raw":"boolean"},"autoUnref":{"description":"weather we should unref the reconnect timer when it is\ncreate automatically\n@,default,false","required":false,"name":"bool","raw":"boolean"},"perMessageDeflate":{"description":"parameters of the WebSocket permessage-deflate extension (see ws module api docs). Set to false to disable.\n@,default,false","required":false,"name":"shape","value":{"threshold":{"description":"","required":true,"name":"number","raw":"number"}},"raw":"{ threshold: number; }"},"addTrailingSlash":{"description":"Whether we should add a trailing slash to the request path.\n@,default,true","required":false,"name":"bool","raw":"boolean"},"protocols":{"description":"Either a single protocol string or an array of protocol strings. These strings are used to indicate sub-protocols,\nso that a single server can implement multiple WebSocket sub-protocols (for example, you might want one server to\nbe able to handle different types of interactions depending on the specified protocol)\n@,default,[]","required":false,"name":"union","value":[{"name":"string","raw":"string"},{"name":"arrayOf","value":{"name":"string","raw":"string"},"raw":"string[]"}],"raw":"string | string[]"},"auth":{"description":"the authentication payload sent when connecting to the Namespace","required":false,"name":"union","value":[{"name":"objectOf","value":{"name":"any","raw":"any"},"raw":"{ [key: string]: any; }"},{"name":"func","raw":"(cb: (data: object) => void) => void"}],"raw":"{ [key: string]: any; } | ((cb: (data: object) => void) => void)"},"retries":{"description":"The maximum number of retries. Above the limit, the packet will be discarded.\n\nUsing `Infinity` means the delivery guarantee is \"at-least-once\" (instead of \"at-most-once\" by default), but a\nsmaller value like 10 should be sufficient in practice.","required":false,"name":"number","raw":"number"},"ackTimeout":{"description":"The default timeout in milliseconds used when waiting for an acknowledgement.","required":false,"name":"number","raw":"number"}},"raw":"Partial<ManagerOptions & SocketOptions>"}},"lastError":{"description":"Last error encountered - READONLY","required":false,"defaultValue":{"value":"null","computed":false},"type":{"name":"shape","value":{"name":{"description":"","required":true,"name":"string","raw":"string"},"message":{"description":"","required":true,"name":"string","raw":"string"},"stack":{"description":"","required":false,"name":"string","raw":"string"}},"raw":"Error"}},"hasError":{"description":"Whether socket has failed to connect - READONLY","required":false,"defaultValue":{"value":"false","computed":false},"type":{"name":"bool","raw":"boolean"}},"id":{"description":"Unique ID to identify this component in Dash callbacks.","required":false,"type":{"name":"string","raw":"string"}},"setProps":{"description":"Update props to trigger callbacks.","required":true,"type":{"name":"func","raw":"(props: Record<string, any>) => void"}}},"isContext":false}}